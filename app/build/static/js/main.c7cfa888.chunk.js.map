{"version":3,"sources":["Pagination.js","SideBar.js","students/StudentsList.js","teachers/TeachersList.js","groups/GroupsList.js","charts/Donut.js","analytics/Analytics.js","Footer.js","DefaultLayout.js","serviceWorker.js","groups/GroupDetails.js","students/StudentDetails.js","timetabling/TimeTabling.js","Timetable.js","CoursesList.js","index.js"],"names":["Pagination","props","className","columns","map","col","key","id","title","data","row","keyName","Object","keys","val","k","to","urlRef","totalRecords","totalPages","SideBar","href","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","StudentsList","state","pages","fetched","self","this","axios","get","then","rsp","setState","students","React","Component","TeachersList","teachers","console","log","GroupsList","groups","Donut","vals","labels","entries","value","push","chartData","series","options","chart","width","type","dataLabels","enabled","fill","legend","formatter","opts","w","globals","seriesIndex","responsive","breakpoint","position","Analytics","pieData","profit","grossIncome","netIncome","studentPayments","totalExpenses","taxes","staffPayments","staffInsurances","staffNetPayments","studentDebts","staffInDebt","Footer","DefaultLayout","component","rest","render","matchProps","Boolean","window","location","hostname","match","GroupDetails","details","course","createdAt","sumStudentDebts","totalMembers","sumStudentPayments","speed","sumTeacherDebts","sumHours","sumTeacherPayments","wage","fee","seminarModules","length","teacherDebts","tch","entityId","fullName","monthTitle","year","amount","studentsDebts","std","studentsList","studentId","joined","dropped","sumPayed","sumOwns","history","hist","started","duration","roomName","StudentDetails","lastPayed","totalPayed","remainDebt","grp","groupId","courseName","totalDebt","payments","pay","debts","dbt","TimeTabling","days","dd","timetabling","hourlyData","record","Timetable","CoursesList","process","responseObj","courses","crs","latestFee","latestWage","numGroups","numStudents","numTeachers","sumPayments","require","config","ReactDOM","StrictMode","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"uTAmDeA,MAhDf,SAAoBC,GAChB,OACI,6BAASC,UAAU,cACf,yBAAKA,UAAU,oBACX,2BAAOA,UAAU,mDACb,+BACA,4BACKD,EAAME,QAAQC,KAAI,SAAAC,GAAG,OAClB,wBAAIC,IAAKD,EAAIE,IAAKF,EAAIG,YAI9B,+BACCP,EAAMQ,KAAKL,KAAI,SAAAM,GAAG,OACf,wBAAIJ,IAAKI,EAAIT,EAAMU,UACdC,OAAOC,KAAKH,GAAKN,KAAI,SAACU,EAAKC,GACxB,OAAIA,EAAI,EACI,wBAAIT,IAAKS,GAAIL,EAAII,IAGrB,4BAAI,kBAAC,IAAD,CAAMR,IAAKS,EAAGC,GAAIf,EAAMgB,OAASP,EAAIT,EAAMU,UAAWD,EAAII,aAOlF,+BACA,4BACKb,EAAME,QAAQC,KAAI,SAAAC,GAAG,OAClB,wBAAIC,IAAKD,EAAIE,IAAKF,EAAIG,cAOtC,yBAAKN,UAAU,OACX,yBAAKA,UAAU,UAAf,iBACmBD,EAAMiB,aADzB,iBAEmBjB,EAAMkB,e,MCY1BC,MApDf,WACI,OACI,yBAAKlB,UAAU,uBAAuBK,GAAG,mBACrC,yBAAKL,UAAU,mBAAf,WACA,yBAAKA,UAAU,+BACX,uBAAGmB,KAAK,IAAInB,UAAU,2CAAtB,aACA,uBAAGmB,KAAK,IAAInB,UAAU,2CAAtB,aACA,wBAAIA,UAAU,0CACV,uBAAGA,UAAU,2BAA2BmB,KAAK,IAAId,GAAG,wBAAwBe,KAAK,SAC9EC,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SAD7D,WAIA,yBAAKvB,UAAU,gBAAgBwB,kBAAgB,yBAC3C,uBAAGxB,UAAU,gBAAgBmB,KAAK,YAAlC,kBAGR,wBAAInB,UAAU,0CACV,uBAAGA,UAAU,2BAA2BmB,KAAK,IAAId,GAAG,yBAAyBe,KAAK,SAC/EC,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SAD7D,YAIA,yBAAKvB,UAAU,gBAAgBwB,kBAAgB,0BAC3C,uBAAGxB,UAAU,gBAAgBmB,KAAK,KAAlC,eACA,uBAAGnB,UAAU,gBAAgBmB,KAAK,aAAlC,mBAGR,wBAAInB,UAAU,0CACV,uBAAGA,UAAU,2BAA2BmB,KAAK,IAAId,GAAG,yBAAyBe,KAAK,SAC/EC,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SAD7D,YAIA,yBAAKvB,UAAU,gBAAgBwB,kBAAgB,0BAC3C,uBAAGxB,UAAU,gBAAgBmB,KAAK,KAAlC,eACA,uBAAGnB,UAAU,gBAAgBmB,KAAK,aAAlC,mBAGR,wBAAInB,UAAU,0CACV,uBAAGA,UAAU,2BAA2BmB,KAAK,IAAId,GAAG,iBAAiBe,KAAK,SACvEC,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SAD7D,UAIA,yBAAKvB,UAAU,gBAAgBwB,kBAAgB,kBAC3C,uBAAGxB,UAAU,gBAAgBmB,KAAK,KAAlC,aACA,uBAAGnB,UAAU,gBAAgBmB,KAAK,WAAlC,iBAGR,uBAAGA,KAAK,aAAanB,UAAU,2CAA/B,gB,gBCuBDyB,E,kDAlEX,WAAY1B,GAAQ,IAAD,8BACf,cAAMA,IAED2B,MAAQ,CACTC,MAAM,EACNX,aAAa,EACbT,KAAK,GACLqB,SAAQ,GAPG,E,gEAYf,IAAMC,EAAOC,KACbC,IAAMC,IAAI,qDAAqDC,MAAK,SAAAC,GAChEL,EAAKM,SAAS,CACV5B,KAAM2B,EAAI3B,KAAK6B,SACfpB,aAAckB,EAAI3B,KAAKS,aACvBY,SAAQ,S,+BAoChB,OACI,6BAASvB,GAAG,gBACPyB,KAAKJ,MAAME,SACR,kBAAC,EAAD,CAAY3B,QAjCP,CACb,CACII,GAAG,EACHC,MAAM,MAEV,CACID,GAAG,EACHC,MAAM,QAEV,CACID,GAAG,EACHC,MAAM,qBAEV,CACID,GAAG,EACHC,MAAM,WAEV,CACID,GAAG,EACHC,MAAM,YAEV,CACID,GAAG,EACHC,MAAM,SAEV,CACID,GAAG,EACHC,MAAM,eAOUS,OAAQ,iBACRN,QAAQ,WACRF,KAAMuB,KAAKJ,MAAMnB,Y,GA5DtB8B,IAAMC,WCgElBC,E,kDA/DX,WAAYxC,GAAQ,IAAD,8BACf,cAAMA,IAED2B,MAAQ,CACTC,MAAO,EACPX,aAAc,EACdT,KAAM,GACNqB,SAAS,GAPE,E,gEAYf,IAAMC,EAAOC,KACbC,IAAMC,IAAI,qDAAqDC,MAAK,SAAAC,GAChEL,EAAKM,SAAS,CACV5B,KAAM2B,EAAI3B,KAAKiC,SACfxB,aAAckB,EAAI3B,KAAKS,aACvBY,SAAS,S,+BAMjBa,QAAQC,IAAIZ,KAAKJ,MAAMnB,MA4BvB,OACI,6BAASF,GAAG,gBACPyB,KAAKJ,MAAME,SACZ,kBAAC,EAAD,CAAY3B,QA7BH,CACb,CACII,GAAI,EACJC,MAAO,MAEX,CACID,GAAI,EACJC,MAAO,QAEX,CACID,GAAI,EACJC,MAAO,qBAEX,CACID,GAAI,EACJC,MAAO,WAEX,CACID,GAAI,EACJC,MAAO,YAEX,CACID,GAAI,EACJC,MAAO,UAOKS,OAAQ,iBACRN,QAAQ,WAAWF,KAAMuB,KAAKJ,MAAMnB,Y,GAzDrC8B,IAAMC,WC+FlBK,E,kDA9FX,WAAY5C,GAAQ,IAAD,8BACf,cAAMA,IAED2B,MAAQ,CACTC,MAAM,EACNX,aAAa,EACbT,KAAK,GACLqB,SAAQ,GAPG,E,gEAYf,IAAMC,EAAOC,KACbC,IAAMC,IAAI,mDAAmDC,MAAK,SAAAC,GAC9DL,EAAKM,SAAS,CACV5B,KAAM2B,EAAI3B,KAAKqC,OACf5B,aAAckB,EAAI3B,KAAKS,aACvBY,SAAQ,S,+BAgEhB,OACI,6BAASvB,GAAG,cACPyB,KAAKJ,MAAME,SACR,kBAAC,EAAD,CAAY3B,QA7DP,CACb,CACII,GAAG,EACHC,MAAM,MAEV,CACID,GAAG,EACHC,MAAM,SAEV,CACID,GAAG,EACHC,MAAM,SAEV,CACID,GAAG,EACHC,MAAM,OAEV,CACID,GAAG,EACHC,MAAM,QAEV,CACID,GAAG,EACHC,MAAM,OAEV,CACID,GAAG,EACHC,MAAM,UAEV,CACID,GAAG,EACHC,MAAM,QAEV,CACID,GAAG,EACHC,MAAM,YAEV,CACID,GAAG,EACHC,MAAM,SAEV,CACID,GAAG,GACHC,MAAM,oBAEV,CACID,GAAG,GACHC,MAAM,qBAEV,CACID,GAAG,GACHC,MAAM,iBAEV,CACID,GAAG,GACHC,MAAM,mBAOUS,OAAQ,eACRN,QAAQ,KACRF,KAAMuB,KAAKJ,MAAMnB,Y,GAxFxB8B,IAAMC,W,yBC8DhBO,E,kDA9DX,WAAY9C,GAAQ,uCACVA,G,qDASN,IAHA,IAAI+C,EAAO,GACPC,EAAS,GAEb,MAAyBrC,OAAOsC,QAAQlB,KAAK/B,MAAMQ,MAAnD,eAA0D,CAAC,IAAD,sBAAhDH,EAAgD,KAA3C6C,EAA2C,KACtDR,QAAQC,IAAItC,EAAK6C,GACjBH,EAAKI,KAAKD,GACVF,EAAOG,KAAK9C,GAGhB,IAAI+C,EAAY,CACZC,OAAQN,EACRO,QAAS,CACLC,MAAO,CACHC,MAAO,IACPC,KAAM,SAEVT,OAAQA,EACRU,WAAY,CACRC,SAAS,GAEbC,KAAM,CACFH,KAAM,YAEVI,OAAQ,CACJC,UAAW,SAASjD,EAAKkD,GACrB,OAAOlD,EAAM,MAAQkD,EAAKC,EAAEC,QAAQZ,OAAOU,EAAKG,eAGxDC,WAAY,CAAC,CACTC,WAAY,IACZd,QAAS,CACLC,MAAO,CACHC,MAAO,KAEXK,OAAQ,CACJQ,SAAU,eAQ9B,OACI,yBAAKpE,UAAU,SACX,kBAAC,IAAD,CAAOqD,QAASF,EAAUE,QACnBD,OAAQD,EAAUC,OAClBI,KAAK,QACLD,MAAM,a,GAxDTlB,IAAMC,WC0DX+B,E,kDAvDX,WAAYtE,GAAQ,IAAD,8BACf,cAAMA,IAED2B,MAAQ,CACT4C,QAAS,CACLC,OAAQ,EACRC,YAAa,EACbC,UAAW,EACXC,gBAAiB,EACjBC,cAAe,EACfC,MAAO,EACPC,cAAe,EACfC,gBAAiB,EACjBC,iBAAkB,EAClBC,aAAc,EACdC,YAAa,GAEjBrD,SAAS,GAjBE,E,gEAsBf,IAAMC,EAAOC,KACbC,IAAMC,IAAI,wDAAwDC,MAAK,SAAAC,GACnEL,EAAKM,SAAS,CACVmC,QAAS,CACLC,OAAQrC,EAAI3B,KAAK,GAAGgE,OACpBC,YAAatC,EAAI3B,KAAK,GAAGiE,YACzBC,UAAWvC,EAAI3B,KAAK,GAAGkE,UACvBC,gBAAiBxC,EAAI3B,KAAK,GAAGmE,gBAC7BC,cAAezC,EAAI3B,KAAK,GAAGoE,cAC3BC,MAAO1C,EAAI3B,KAAK,GAAGqE,MACnBC,cAAe3C,EAAI3B,KAAK,GAAGsE,cAC3BC,gBAAiB5C,EAAI3B,KAAK,GAAGuE,gBAC7BC,iBAAkB7C,EAAI3B,KAAK,GAAGwE,iBAC9BC,aAAc9C,EAAI3B,KAAK,GAAGyE,aAC1BC,YAAa/C,EAAI3B,KAAK,GAAG0E,aAE7BrD,SAAS,S,+BAOjB,OAAIE,KAAKJ,MAAME,QAET,kBAAC,EAAD,CAAOrB,KAAMuB,KAAKJ,MAAM4C,UAGlB,0C,GAnDIjC,IAAMC,W,qBCKf4C,MARf,WACI,OAAQ,4BAAQlF,UAAU,UACtB,yBAAKA,UAAU,aACX,0BAAMA,UAAU,cAAhB,wCCmBGmF,EApBO,SAAC,GAAD,IAAa7C,EAAb,EAAE8C,UAAyBC,EAA3B,oCAClB,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAAAC,GAAU,OACd,8BACI,yBAAKvF,UAAU,SAASK,GAAG,WACvB,kBAAC,EAAD,MACA,yBAAKA,GAAG,wBACJ,yBAAKL,UAAU,mBACX,kBAACsC,EAAciD,MAI3B,kBAAC,EAAD,YCNIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,ICiMSC,E,kDA/MX,WAAY9F,GAAQ,IAAD,8BACf,cAAMA,IAED2B,MAAQ,CACToE,QAAS,GACTlE,SAAS,GALE,E,gEAUf,IAAMC,EAAOC,KACbC,IAAMC,IAAI,yDAAyDC,MAAK,SAAAC,GACpEL,EAAKM,SAAS,CACV5B,KAAM2B,EAAI3B,KACVqB,SAAS,S,+BAOjB,OAAIE,KAAKJ,MAAME,QACH,6BAAS5B,UAAU,gBACnB,4BAAK8B,KAAKJ,MAAMnB,KAAKwF,QAGrB,yBAAK/F,UAAU,OACX,yBAAKA,UAAU,UAEX,2BAAOA,UAAU,sCACb,+BACA,4BACI,uCACA,4BAAK8B,KAAKJ,MAAMnB,KAAKyF,WACrB,4CACA,4BAAKlE,KAAKJ,MAAMnB,KAAK0F,kBAEzB,4BACI,uCACA,4BAAKnE,KAAKJ,MAAMnB,KAAK2F,cACrB,gDACA,4BAAKpE,KAAKJ,MAAMnB,KAAK4F,qBAEzB,4BACI,qCACA,4BAAKrE,KAAKJ,MAAMnB,KAAK6F,OACrB,4CACA,4BAAKtE,KAAKJ,MAAMnB,KAAK8F,kBAEzB,4BACI,qCACA,4BAAKvE,KAAKJ,MAAMnB,KAAK+F,UACrB,iDACA,4BAAKxE,KAAKJ,MAAMnB,KAAKgG,qBAEzB,4BACI,oCACA,4BAAKzE,KAAKJ,MAAMnB,KAAKiG,MACrB,mCACA,4BAAK1E,KAAKJ,MAAMnB,KAAKkG,UASpC3E,KAAKJ,MAAMnB,KAAKmG,eAAeC,OAAQ,GACpC,yBAAK3G,UAAU,OACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,oCAAoCoB,KAAK,SACpD,gDAGJ,2BAAOpB,UAAU,gDACb,+BACA,kCACA,qCAEA,mCAQpB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SAGX,yBAAKA,UAAU,mCAAmCoB,KAAK,SACnD,8CAGJ,2BAAOpB,UAAU,gDACb,+BACI,kCACA,oCACA,qCACA,uCAEJ,+BACK8B,KAAKJ,MAAMnB,KAAKqG,aAAa1G,KAAI,SAAA2G,GAAG,OACjC,4BACI,4BAAKA,EAAIC,UACT,4BAAKD,EAAIE,UACT,4BAAKF,EAAIG,WAAT,IAAsBH,EAAII,MAC1B,4BAAKJ,EAAIK,eAO7B,yBAAKlH,UAAU,SAEX,yBAAKA,UAAU,mCAAmCoB,KAAK,SACnD,8CAEJ,2BAAOpB,UAAU,gDACb,+BACI,kCACA,oCACA,qCACA,uCAEJ,+BACK8B,KAAKJ,MAAMnB,KAAK4G,cAAcjH,KAAI,SAAAkH,GAAG,OACjC,4BACG,4BAAKA,EAAIN,UACT,4BAAKM,EAAIL,UACT,4BAAKK,EAAIJ,WAAT,IAAsBI,EAAIH,MAC1B,4BAAKG,EAAIF,gBASjC,6CAEA,yBAAKlH,UAAU,OACX,yBAAKA,UAAU,UACX,2BAAOA,UAAU,2DACb,+BACA,kCACA,oCACA,sCACA,uCACA,qCACA,qCAEA,+BACC8B,KAAKJ,MAAMnB,KAAK8G,aAAanH,KAAI,SAAAkH,GAAG,OACjC,4BACI,4BAAKA,EAAIE,WACT,4BAAKF,EAAIL,UACT,4BAAKK,EAAIG,QACT,4BAAKH,EAAII,SACT,4BAAKJ,EAAIK,UACT,4BAAKL,EAAIM,iBAS7B,+CACA,yBAAK1H,UAAU,OACX,yBAAKA,UAAU,UACX,2BAAOA,UAAU,2DACb,+BACA,uCACA,wCACA,oCACA,mCACA,qCAEA,+BACC8B,KAAKJ,MAAMnB,KAAKoH,QAAQzH,KAAI,SAAA0H,GAAI,OAC7B,4BACI,4BAAKA,EAAKC,SACV,4BAAKD,EAAKE,UACV,4BAAKF,EAAKG,UACV,4BAAKH,EAAKnB,KACV,4BAAKmB,EAAKpB,eAW1B,0C,GA3MOnE,IAAMC,WCmJlB0F,E,kDAlJX,WAAYjI,GAAQ,IAAD,8BACf,cAAMA,IAED2B,MAAQ,CACToE,QAAS,GACTlE,SAAS,GALE,E,gEAUfa,QAAQC,IAAIZ,KAAK/B,OACjB,IAAM8B,EAAOC,KACbC,IAAMC,IAAI,2DAA2DC,MAAK,SAAAC,GACtEL,EAAKM,SAAS,CACV5B,KAAM2B,EAAI3B,KACVqB,SAAS,S,+BAMjB,OAAIE,KAAKJ,MAAME,QACH,6BAAS5B,UAAU,kBACvB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SAEX,2BAAOA,UAAU,yBACb,+BACA,4BACI,oCACA,4BAAK8B,KAAKJ,MAAMnB,KAAKwG,UACrB,uCACA,8BAEJ,4BACI,qCACA,6BACA,qCACA,8BAEJ,4BACI,uCACA,4BAAKjF,KAAKJ,MAAMnB,KAAKqC,OAAO+D,QAC5B,0CACA,4BAAK7E,KAAKJ,MAAMnB,KAAK0H,YAEzB,4BACI,2CACA,4BAAKnG,KAAKJ,MAAMnB,KAAK2H,YACrB,8CACA,4BAAKpG,KAAKJ,MAAMnB,KAAK4H,iBA5BjC,SAoCJ,yBAAKnI,UAAU,OACX,yBAAKA,UAAU,SACX,2BAAOA,UAAU,uCACb,+BACI,4BACI,kCACA,qCACA,sCACA,uCACA,qCACA,uCAGR,+BACK8B,KAAKJ,MAAMnB,KAAKqC,OAAO1C,KAAI,SAAAkI,GAAG,OAC3B,4BACI,4BAAKA,EAAIC,SACT,4BAAKD,EAAIE,YACT,4BAAKF,EAAIb,QACT,4BAAKa,EAAIZ,SACT,4BAAKY,EAAIF,YACT,4BAAKE,EAAIG,mBAzD7B,qBAmEJ,yBAAKvI,UAAU,OACX,yBAAKA,UAAU,SACX,2BAAOA,UAAU,uCACb,+BACI,4BACI,kCACA,qCACA,qCACA,wCAGR,+BACC8B,KAAKJ,MAAMnB,KAAKiI,SAAStI,KAAI,SAAAuI,GAAG,OAC7B,4BACI,4BAAKA,EAAI3B,UACT,4BAAK2B,EAAIH,YACT,4BAAKG,EAAIvB,QACT,4BAAKuB,EAAIzB,WAAT,IAAsByB,EAAIxB,aAO1C,yBAAKjH,UAAU,SACX,2BAAOA,UAAU,uCACb,+BACI,4BACI,kCACA,qCACA,qCACA,wCAGR,+BACC8B,KAAKJ,MAAMnB,KAAKmI,MAAMxI,KAAI,SAAAyI,GAAG,OAC1B,4BACI,4BAAKA,EAAI7B,UACT,4BAAK6B,EAAIL,YACT,4BAAKK,EAAIzB,QACT,4BAAKyB,EAAI3B,WAAT,IAAsB2B,EAAI1B,eAY1C,0C,GA9IS5E,IAAMC,WCqCpBsG,G,wDAnCX,WAAY7I,GAAQ,uCACVA,G,qDAKN,OAAQ,6BAASM,GAAG,oBAEhB,yBAAKL,UAAU,mBACX,yBAAKA,UAAU,mBACV8B,KAAK/B,MAAM8I,KAAK3I,KAAI,SAAA4I,GAAE,OACnB,yBAAK9I,UAAU,SACX,yBAAKA,UAAU,qBAAoB,2BAAI8I,SAKlDhH,KAAK/B,MAAMgJ,YAAY7I,KAAI,SAAA8I,GAAU,OAClC,yBAAKhJ,UAAU,mBAEVgJ,EAAW9I,KAAI,SAAA+I,GAAM,OAClB,yBAAKjJ,UAAU,qBACX,yBAAKA,UAAU,+BAA8B,2BAAIiJ,kB,GAvBvD5G,IAAMC,YCiChB4G,E,kDAhCZ,WAAYnJ,GAAQ,IAAD,8BACf,cAAMA,IAED2B,MAAQ,CACTnB,KAAM,GACNqB,SAAS,GALE,E,gEAWf,IAAMC,EAAOC,KACbC,IAAMC,IAAI,sDAAsDC,MAAK,SAAAC,GACjEL,EAAKM,SAAS,CACV5B,KAAM2B,EAAI3B,KACVqB,SAAS,S,+BAMjB,OAAIE,KAAKJ,MAAME,QACH,6BAASvB,GAAG,oBACZ,kBAAC,EAAD,CAAawI,KAAM/G,KAAKJ,MAAMnB,KAAKsI,KAAME,YAAajH,KAAKJ,MAAMnB,KAAKwI,eAItE,0C,GA5BI1G,IAAMC,WCiGf6G,E,kDAhGX,WAAYpJ,GAAQ,IAAD,8BACf,cAAMA,IAED2B,MAAQ,CACTC,MAAO,EACPX,aAAc,EACdT,KAAM,GACNqB,SAAS,GAPE,E,gEAaf,IAAMC,EAAOC,KACbW,QAAQC,IAAI0G,oHACZrH,IAAMC,IAAI,oDACLC,MAAK,SAACoH,GACH,IAAIC,EAAUD,EAAY9I,KAAKL,KAAI,SAAAqJ,GAC/B,MAAO,CACHlJ,GAAIkJ,EAAIlJ,GACRC,MAAOiJ,EAAIjJ,MACXkD,KAAM+F,EAAG,cAAH,MACN9C,IAAI8C,EAAIC,UACRhD,KAAK+C,EAAIE,WACTC,UAAWH,EAAIG,UACfC,YAAaJ,EAAII,YACjBC,YAAaL,EAAIK,YACjBC,YAAaN,EAAIM,YACjBvD,SAAUiD,EAAIjD,aAGtBzE,EAAKM,SAAS,CACV5B,KAAM+I,EACNtI,aAAcqI,EAAY9I,KAAKoG,OAC/B/E,SAAS,S,+BAMrBa,QAAQC,IAAIZ,KAAKJ,MAAMnB,MA4CvB,OACI,6BAASF,GAAG,eACPyB,KAAKJ,MAAME,SACZ,kBAAC,EAAD,CAAY3B,QA7CH,CACb,CACII,GAAI,EACJC,MAAO,MAEX,CACID,GAAI,EACJC,MAAO,SAEX,CACID,GAAI,EACJC,MAAO,QAEX,CACID,GAAI,EACJC,MAAO,OAEX,CACID,GAAI,EACJC,MAAO,QAEX,CACID,GAAI,EACJC,MAAO,WAEX,CACID,GAAI,EACJC,MAAO,aAEX,CACID,GAAI,EACJC,MAAO,aAEX,CACID,GAAI,EACJC,MAAO,gBAEX,CACID,GAAI,EACJC,MAAO,WAOKS,OAAQ,gBACRN,QAAQ,KAAKF,KAAMuB,KAAKJ,MAAMnB,Y,GA1FhC8B,IAAMC,WCYhCwH,EAAQ,IAAUC,SAGlBC,IAAS1E,OACP,kBAAC,IAAM2E,WAAP,KACI,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAeC,OAAK,EAACC,KAAK,IAAI/E,UAAW,kBAAM,kBAAC,EAAD,SAC/C,kBAAC,EAAD,CAAe8E,OAAK,EAACC,KAAK,WAAW/E,UAAW,kBAAM,kBAAC,EAAD,SACtD,kBAAC,EAAD,CAAe8E,OAAK,EAACC,KAAK,YAAY/E,UAAW,kBAAM,kBAAC,EAAD,SACvD,kBAAC,EAAD,CAAe8E,OAAK,EAACC,KAAK,YAAY/E,UAAW,kBAAM,kBAAC,EAAD,SACvD,kBAAC,EAAD,CAAe8E,OAAK,EAACC,KAAK,UAAU/E,UAAW,kBAAM,kBAAC,EAAD,SACrD,kBAAC,EAAD,CAAe8E,OAAK,EAACC,KAAK,aAAa/E,UAAW,kBAAM,kBAAC,EAAD,SACxD,kBAAC,EAAD,CAAe8E,OAAK,EAACC,KAAK,uBAAuB/E,UAAW,kBAAM,kBAAC,EAAD,SAClE,kBAAC,EAAD,CAAe8E,OAAK,EAACC,KAAK,2BAA2B/E,UAAW,kBAAM,kBAAC,EAAD,UAT9E,KAaAgF,SAASC,eAAe,SNkGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvI,MAAK,SAAAwI,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnI,QAAQmI,MAAMA,EAAMC,c","file":"static/js/main.c7cfa888.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nfunction Pagination(props) {\n    return (\n        <section className=\"Pagination\">\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped table-bordered table-hover \">\n                    <thead>\n                    <tr>\n                        {props.columns.map(col => (\n                            <th key={col.id}>{col.title}</th>\n                        ))}\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {props.data.map(row => (\n                        <tr key={row[props.keyName]}>\n                            {Object.keys(row).map((val, k) => {\n                                if (k > 0) {\n                                    return (<td key={k}>{row[val]}</td>)\n                                } else {\n                                    return (\n                                        <td><Link key={k} to={props.urlRef + row[props.keyName]}>{row[val]}</Link></td>)\n                                }\n                            })\n                            }\n                        </tr>\n                    ))}\n                    </tbody>\n                    <tfoot>\n                    <tr>\n                        {props.columns.map(col => (\n                            <th key={col.id}>{col.title}</th>\n                        ))}\n                    </tr>\n                    </tfoot>\n                </table>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-10\">\n                    Total Records {props.totalRecords}\n                    Total Records {props.totalPages}\n                </div>\n            </div>\n\n        </section>\n    );\n}\n\nexport default Pagination;\n","import React from 'react';\nimport './SideBar.css';\n\nfunction SideBar() {\n    return (\n        <div className=\"bg-dark border-right\" id=\"sidebar-wrapper\">\n            <div className=\"sidebar-heading\">Dickens</div>\n            <div className=\"list-group list-group-flush\">\n                <a href=\"/\" className=\"list-group-item list-group-item-action \">Dashboard</a>\n                <a href=\"/\" className=\"list-group-item list-group-item-action \">Timetable</a>\n                <li className=\"list-group-item list-group-item-action\">\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarCoursesDropdown\" role=\"button\"\n                       data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        Courses\n                    </a>\n                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarCoursesDropdown\">\n                        <a className=\"dropdown-item\" href=\"/courses\">Courses List</a>\n                    </div>\n                </li>\n                <li className=\"list-group-item list-group-item-action\">\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarStudentsDropdown\" role=\"button\"\n                       data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        Students\n                    </a>\n                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarStudentsDropdown\">\n                        <a className=\"dropdown-item\" href=\"#\">New Student</a>\n                        <a className=\"dropdown-item\" href=\"/students\">Students List</a>\n                    </div>\n                </li>\n                <li className=\"list-group-item list-group-item-action\">\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarTeachersDropdown\" role=\"button\"\n                       data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        Teachers\n                    </a>\n                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarTeachersDropdown\">\n                        <a className=\"dropdown-item\" href=\"#\">New Teacher</a>\n                        <a className=\"dropdown-item\" href=\"/teachers\">Teachers List</a>\n                    </div>\n                </li>\n                <li className=\"list-group-item list-group-item-action\">\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\n                       data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        Groups\n                    </a>\n                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                        <a className=\"dropdown-item\" href=\"#\">New Group</a>\n                        <a className=\"dropdown-item\" href=\"/groups\">Groups List</a>\n                    </div>\n                </li>\n                <a href=\"/analytics\" className=\"list-group-item list-group-item-action \">Analytics</a>\n            </div>\n        </div>\n    );\n}\n\nexport default SideBar;\n","import React, {Component} from 'react';\nimport Pagination from \"../Pagination\";\nimport SideBar from \"../SideBar\";\nimport axios from \"axios\";\n\nclass StudentsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pages:0,\n            totalRecords:0,\n            data:[],\n            fetched:false,\n        }\n    }\n\n    componentDidMount() {\n        const self = this;\n        axios.get('https://dickenserp-api.herokuapp.com/api/students').then(rsp => {\n            self.setState({\n                data: rsp.data.students,\n                totalRecords: rsp.data.totalRecords,\n                fetched:true\n            })\n        })\n    }\n\n    render() {\n        const colNames = [\n            {\n                id:0,\n                title:'id'\n            },\n            {\n                id:1,\n                title:'Name'\n            },\n            {\n                id:2,\n                title:'Registration Date'\n            },\n            {\n                id:3,\n                title:'#Groups'\n            },\n            {\n                id:4,\n                title:'Payments'\n            },\n            {\n                id:5,\n                title:'Debts'\n            },\n            {\n                id:6,\n                title:'Last Payed'\n            }\n        ]\n        return (\n            <section id=\"studentsList\">\n                {this.state.fetched &&\n                    <Pagination columns={colNames}\n                                urlRef={\"/student/info/\"}\n                                keyName=\"entityId\"\n                                data={this.state.data}/>\n                }\n            </section>\n        )\n    }\n}\n\nexport default StudentsList;\n","import React, {Component} from 'react';\nimport Pagination from \"../Pagination\";\nimport SideBar from \"../SideBar\";\nimport axios from 'axios'\n\nclass TeachersList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pages: 0,\n            totalRecords: 0,\n            data: [],\n            fetched: false,\n        }\n    }\n\n    componentDidMount() {\n        const self = this;\n        axios.get('https://dickenserp-api.herokuapp.com/api/teachers').then(rsp => {\n            self.setState({\n                data: rsp.data.teachers,\n                totalRecords: rsp.data.totalRecords,\n                fetched: true\n            })\n        })\n    }\n\n    render() {\n        console.log(this.state.data);\n\n        const colNames = [\n            {\n                id: 0,\n                title: 'id'\n            },\n            {\n                id: 1,\n                title: 'Name'\n            },\n            {\n                id: 2,\n                title: 'Registration Date'\n            },\n            {\n                id: 3,\n                title: '#Groups'\n            },\n            {\n                id: 4,\n                title: 'Payments'\n            },\n            {\n                id: 5,\n                title: 'Debts'\n            }\n        ]\n        return (\n            <section id=\"teachersList\">\n                {this.state.fetched &&\n                <Pagination columns={colNames}\n                            urlRef={\"/teacher/info/\"}\n                            keyName=\"entityId\" data={this.state.data}/>\n                }\n            </section>\n        )\n    }\n}\n\nexport default TeachersList;\n","import React, {Component} from 'react';\nimport Pagination from \"../Pagination\";\nimport SideBar from \"../SideBar\";\nimport axios from \"axios\";\n\nclass GroupsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pages:0,\n            totalRecords:0,\n            data:[],\n            fetched:false,\n        }\n    }\n\n    componentDidMount() {\n        const self = this;\n        axios.get('https://dickenserp-api.herokuapp.com/api/groups').then(rsp => {\n            self.setState({\n                data: rsp.data.groups,\n                totalRecords: rsp.data.totalRecords,\n                fetched:true\n            })\n        })\n    }\n\n    render() {\n        const colNames = [\n            {\n                id:0,\n                title:'id'\n            },\n            {\n                id:1,\n                title:'title'\n            },\n            {\n                id:2,\n                title:'Speed'\n            },\n            {\n                id:3,\n                title:'Age'\n            },\n            {\n                id:4,\n                title:'Wage'\n            },\n            {\n                id:5,\n                title:'Fee'\n            },\n            {\n                id:6,\n                title:'Starts'\n            },\n            {\n                id:7,\n                title:'Ends'\n            },\n            {\n                id:8,\n                title:'Students'\n            },\n            {\n                id:9,\n                title:'Hours'\n            },\n            {\n                id:10,\n                title:'Payments Teacher'\n            },\n            {\n                id:11,\n                title:'Payments Students'\n            },\n            {\n                id:12,\n                title:'Debts Teacher'\n            },\n            {\n                id:13,\n                title:'Debts Students'\n            }\n        ]\n        return (\n            <section id=\"groupsList\">\n                {this.state.fetched &&\n                    <Pagination columns={colNames}\n                                urlRef={\"/group/info/\"}\n                                keyName=\"id\"\n                                data={this.state.data}/>\n                }\n            </section>\n        )\n    }\n}\n\nexport default GroupsList;\n","import React, {Component} from 'react';\nimport Chart from \"react-apexcharts\";\n\n\nclass Donut extends React.Component {\n    constructor(props) {\n        super(props);\n            }\n\n\n\n    render() {\n        let vals = [];\n        let labels = [];\n\n        for (let [key, value] of Object.entries(this.props.data)) {\n            console.log(key, value);\n            vals.push(value);\n            labels.push(key);\n\n        }\n        let chartData = {\n            series: vals,\n            options: {\n                chart: {\n                    width: 380,\n                    type: 'donut',\n                },\n                labels: labels,\n                dataLabels: {\n                    enabled: true\n                },\n                fill: {\n                    type: 'gradient',\n                },\n                legend: {\n                    formatter: function(val, opts) {\n                        return val + \" - \" + opts.w.globals.series[opts.seriesIndex]\n                    }\n                },\n                responsive: [{\n                    breakpoint: 480,\n                    options: {\n                        chart: {\n                            width: 200\n                        },\n                        legend: {\n                            position: 'bottom'\n                        }\n                    }\n                }]\n            },\n\n\n        };\n        return (\n            <div className=\"donut\">\n                <Chart options={chartData.options}\n                       series={chartData.series}\n                       type=\"donut\"\n                       width=\"600\" />\n            </div>\n\n        );\n    }\n}\n\nexport default Donut;\n","import React, {Component} from 'react';\nimport SideBar from \"../SideBar\";\nimport axios from \"axios\";\nimport Donut from \"../charts/Donut\";\nimport GroupsList from \"../groups/GroupsList\";\n\nclass Analytics extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pieData: {\n                profit: 0,\n                grossIncome: 0,\n                netIncome: 0,\n                studentPayments: 0,\n                totalExpenses: 0,\n                taxes: 0,\n                staffPayments: 0,\n                staffInsurances: 0,\n                staffNetPayments: 0,\n                studentDebts: 0,\n                staffInDebt: 0,\n            },\n            fetched: false,\n        }\n    }\n\n    componentDidMount() {\n        const self = this;\n        axios.get('https://dickenserp-api.herokuapp.com/api/revenue/pie').then(rsp => {\n            self.setState({\n                pieData: {\n                    profit: rsp.data[0].profit,\n                    grossIncome: rsp.data[0].grossIncome,\n                    netIncome: rsp.data[0].netIncome,\n                    studentPayments: rsp.data[0].studentPayments,\n                    totalExpenses: rsp.data[0].totalExpenses,\n                    taxes: rsp.data[0].taxes,\n                    staffPayments: rsp.data[0].staffPayments,\n                    staffInsurances: rsp.data[0].staffInsurances,\n                    staffNetPayments: rsp.data[0].staffNetPayments,\n                    studentDebts: rsp.data[0].studentDebts,\n                    staffInDebt: rsp.data[0].staffInDebt,\n                },\n                fetched: true\n            })\n        })\n    }\n\n\n    render() {\n        if (this.state.fetched) {\n            return (\n              <Donut data={this.state.pieData}/>\n            )\n        } else {\n            return (<p>Wait...</p>)\n        }\n    }\n}\n\nexport default Analytics;\n","import React from 'react';\nimport './footer.css';\n\nfunction Footer() {\n    return (<footer className=\"footer\">\n        <div className=\"container\">\n            <span className=\"text-muted\">Place sticky footer content here.</span>\n        </div>\n    </footer>)\n}\n\nexport default Footer;\n","import React, {Component} from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport SideBar from \"./SideBar\";\nimport Footer from \"./Footer\";\n\nconst DefaultLayout = ({component: Component, ...rest}) => (\n    <Route\n        {...rest}\n        render={matchProps => (\n            <main>\n                <div className=\"d-flex\" id=\"wrapper\">\n                    <SideBar/>\n                    <div id=\"page-content-wrapper\">\n                        <div className=\"container-fluid\">\n                            <Component {...matchProps} />\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </main>\n        )}\n    />\n);\n\n\nexport default DefaultLayout;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = '${process.env.PUBLIC_URL}/service-worker.js';\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Component} from 'react';\nimport axios from \"axios\";\n\nclass GroupDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            details: {},\n            fetched: false,\n        }\n    }\n\n    componentDidMount() {\n        const self = this;\n        axios.get('https://dickenserp-api.herokuapp.com/api/group/info/2').then(rsp => {\n            self.setState({\n                data: rsp.data,\n                fetched: true\n            })\n        })\n    }\n\n\n    render() {\n        if (this.state.fetched) {\n            return (<section className=\"groupSection\">\n                    <h2>{this.state.data.course}</h2>\n\n\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n\n                            <table className=\"table table-striped table-bordered\">\n                                <tbody>\n                                <tr>\n                                    <td>Started</td>\n                                    <td>{this.state.data.createdAt}</td>\n                                    <td>Student Debt</td>\n                                    <td>{this.state.data.sumStudentDebts}</td>\n                                </tr>\n                                <tr>\n                                    <td>Members</td>\n                                    <td>{this.state.data.totalMembers}</td>\n                                    <td>Student Payments</td>\n                                    <td>{this.state.data.sumStudentPayments}</td>\n                                </tr>\n                                <tr>\n                                    <td>Speed</td>\n                                    <td>{this.state.data.speed}</td>\n                                    <td>Teacher Debt</td>\n                                    <td>{this.state.data.sumTeacherDebts}</td>\n                                </tr>\n                                <tr>\n                                    <td>Hours</td>\n                                    <td>{this.state.data.sumHours}</td>\n                                    <td>Teacher Payements</td>\n                                    <td>{this.state.data.sumTeacherPayments}</td>\n                                </tr>\n                                <tr>\n                                    <td>Wage</td>\n                                    <td>{this.state.data.wage}</td>\n                                    <td>Fee</td>\n                                    <td>{this.state.data.fee}</td>\n                                </tr>\n\n\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                    {this.state.data.seminarModules.length >0 &&\n                        <div className=\"row\">\n                            <div className=\"col-8\">\n                                <div className=\"alert alert-primary  alert-height\" role=\"alert\">\n                                    <h5>Seminar Modules</h5>\n                                </div>\n\n                                <table className=\"table table-sm  table-striped table-bordered\">\n                                    <thead>\n                                    <th>Id</th>\n                                    <th>Name</th>\n                                    </thead>\n                                    <tbody>\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    }\n\n                <div className=\"row\">\n                    <div className=\"col-5\">\n\n\n                        <div className=\"alert alert-danger  alert-height\" role=\"alert\">\n                            <h5>Teacher Debts</h5>\n                        </div>\n\n                        <table className=\"table table-sm  table-striped table-bordered\">\n                            <thead>\n                                <th>Id</th>\n                                <th>Name</th>\n                                <th>Month</th>\n                                <th>Amount</th>\n                            </thead>\n                            <tbody>\n                                {this.state.data.teacherDebts.map(tch => (\n                                    <tr>\n                                        <td>{tch.entityId}</td>\n                                        <td>{tch.fullName}</td>\n                                        <td>{tch.monthTitle} {tch.year}</td>\n                                        <td>{tch.amount}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div className=\"col-5\">\n\n                        <div className=\"alert alert-danger  alert-height\" role=\"alert\">\n                            <h5>Student Debts</h5>\n                        </div>\n                        <table className=\"table table-sm  table-striped table-bordered\">\n                            <thead>\n                                <th>Id</th>\n                                <th>Name</th>\n                                <th>Month</th>\n                                <th>Amount</th>\n                            </thead>\n                            <tbody>\n                                {this.state.data.studentsDebts.map(std => (\n                                     <tr>\n                                        <td>{std.entityId}</td>\n                                        <td>{std.fullName}</td>\n                                        <td>{std.monthTitle} {std.year}</td>\n                                        <td>{std.amount}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n\n                    </div>\n                </div>\n\n                <h5>Students list</h5>\n\n                <div className=\"row\">\n                    <div className=\"col-10\">\n                        <table className=\"table table-sm table-striped table-bordered table-hover\">\n                            <thead>\n                            <th>id</th>\n                            <th>Name</th>\n                            <th>Joined</th>\n                            <th>Dropped</th>\n                            <th>Payed</th>\n                            <th>Debt</th>\n                            </thead>\n                            <tbody>\n                            {this.state.data.studentsList.map(std => (\n                                <tr>\n                                    <td>{std.studentId}</td>\n                                    <td>{std.fullName}</td>\n                                    <td>{std.joined}</td>\n                                    <td>{std.dropped}</td>\n                                    <td>{std.sumPayed}</td>\n                                    <td>{std.sumOwns}</td>\n\n                                </tr>\n                            ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n                <h5>Courses History</h5>\n                <div className=\"row\">\n                    <div className=\"col-10\">\n                        <table className=\"table table-sm table-striped table-bordered table-hover\">\n                            <thead>\n                            <th>Started</th>\n                            <th>Duration</th>\n                            <th>Room</th>\n                            <th>Fee</th>\n                            <th>Wage</th>\n                            </thead>\n                            <tbody>\n                            {this.state.data.history.map(hist => (\n                                <tr>\n                                    <td>{hist.started}</td>\n                                    <td>{hist.duration}</td>\n                                    <td>{hist.roomName}</td>\n                                    <td>{hist.fee}</td>\n                                    <td>{hist.wage}</td>\n                                </tr>\n                            ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n                </section>\n            )\n        } else {\n            return (<p>Wait...</p>)\n        }\n    }\n}\n\nexport default GroupDetails\n","import React, {Component} from 'react';\nimport axios from \"axios\";\n\nclass StudentDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            details: {},\n            fetched: false,\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n        const self = this;\n        axios.get('https://dickenserp-api.herokuapp.com/api/student/info/2').then(rsp => {\n            self.setState({\n                data: rsp.data,\n                fetched: true\n            })\n        })\n    }\n\n    render() {\n        if (this.state.fetched) {\n            return (<section className=\"studentSection\">\n                <div className=\"row\">\n                    <div className=\"col-9\">\n\n                        <table className=\"table  table-bordered\">\n                            <tbody>\n                            <tr>\n                                <td>Name</td>\n                                <td>{this.state.data.fullName}</td>\n                                <td>Address</td>\n                                <td></td>\n                            </tr>\n                            <tr>\n                                <td>Phone</td>\n                                <td></td>\n                                <td>Email</td>\n                                <td></td>\n                            </tr>\n                            <tr>\n                                <td>#Groups</td>\n                                <td>{this.state.data.groups.length}</td>\n                                <td>Last payed</td>\n                                <td>{this.state.data.lastPayed}</td>\n                            </tr>\n                            <tr>\n                                <td>Total Payed</td>\n                                <td>{this.state.data.totalPayed}</td>\n                                <td>Remaining Debt</td>\n                                <td>{this.state.data.remainDebt}</td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n                Groups\n                <div className=\"row\">\n                    <div className=\"col-9\">\n                        <table className=\"table table-bordered table-stripped\">\n                            <thead>\n                                <tr>\n                                    <th>id</th>\n                                    <th>Group</th>\n                                    <th>Joined</th>\n                                    <th>Dropped</th>\n                                    <th>Payed</th>\n                                    <th>Debts</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.data.groups.map(grp => (\n                                    <tr>\n                                        <td>{grp.groupId}</td>\n                                        <td>{grp.courseName}</td>\n                                        <td>{grp.joined}</td>\n                                        <td>{grp.dropped}</td>\n                                        <td>{grp.totalPayed}</td>\n                                        <td>{grp.totalDebt}</td>\n\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n                Payments and Debts\n                <div className=\"row\">\n                    <div className=\"col-5\">\n                        <table className=\"table table-bordered table-stripped\">\n                            <thead>\n                                <tr>\n                                    <th>id</th>\n                                    <th>Group</th>\n                                    <th>Payed</th>\n                                    <th>period</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.data.payments.map(pay => (\n                                <tr>\n                                    <td>{pay.entityId}</td>\n                                    <td>{pay.courseName}</td>\n                                    <td>{pay.amount}</td>\n                                    <td>{pay.monthTitle} {pay.year}</td>\n                                </tr>\n                            ))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div className=\"col-5\">\n                        <table className=\"table table-bordered table-stripped\">\n                            <thead>\n                                <tr>\n                                    <th>id</th>\n                                    <th>Group</th>\n                                    <th>Debts</th>\n                                    <th>period</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.data.debts.map(dbt => (\n                                <tr>\n                                    <td>{dbt.entityId}</td>\n                                    <td>{dbt.courseName}</td>\n                                    <td>{dbt.amount}</td>\n                                    <td>{dbt.monthTitle} {dbt.year}</td>\n                                </tr>\n                            ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n\n\n            </section>);\n        } else {\n            return (<p>Wait...</p>)\n        }\n    }\n}\n\nexport default StudentDetails;\n","import React, {Component} from 'react';\nimport axios from \"axios\";\nimport './timetabling.css';\n\nclass TimeTabling extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n        return (<section id=\"timetableSection\">\n\n            <div className=\"container-fluid\">\n                <div className=\"row flex-nowrap\">\n                    {this.props.days.map(dd => (\n                        <div className=\"col-3\">\n                            <div className=\"course-div header\"><p>{dd}</p></div>\n                        </div>\n                    ))}\n                </div>\n\n                {this.props.timetabling.map(hourlyData => (\n                    <div className=\"row flex-nowrap\">\n\n                        {hourlyData.map(record => (\n                            <div className=\"col-3 card-course\">\n                                <div className=\"card card-block courseBlock\"><p>{record}</p></div>\n                            </div>\n                        ))}\n                    </div>\n                ))}\n\n            </div>\n\n        </section>)\n\n    }\n}\n\nexport default TimeTabling;\n","import React, {Component} from 'react';\nimport axios from \"axios\";\nimport TimeTabling from \"./timetabling/TimeTabling\";\n\nclass Timetable extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: {},\n            fetched: false,\n        }\n    }\n\n    componentDidMount() {\n     \n        const self = this;\n        axios.get('https://dickenserp-api.herokuapp.com/api/timetable').then(rsp => {\n            self.setState({\n                data: rsp.data,\n                fetched: true\n            })\n        })\n    }\n\n    render() {\n        if (this.state.fetched) {\n            return (<section id=\"timetableSection\">\n                    <TimeTabling days={this.state.data.days} timetabling={this.state.data.timetabling} />\n            </section>)\n        }\n        else {\n            return (<p>Wait...</p>)\n        }\n    }\n}\n\nexport  default Timetable;\n","import React, {Component} from 'react';\nimport Pagination from \"./Pagination\";\nimport axios from 'axios'\n\nclass CoursesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pages: 0,\n            totalRecords: 0,\n            data: [],\n            fetched: false,\n        }\n    }\n\n\n    componentDidMount() {\n        const self = this;\n        console.log(process.env)\n        axios.get('https://dickenserp-api.herokuapp.com/api/courses')\n            .then((responseObj) => {\n                let courses = responseObj.data.map(crs => {\n                    return {\n                        id: crs.id,\n                        title: crs.title,\n                        type: crs['courseTypeObj']['title'],\n                        fee:crs.latestFee,\n                        wage:crs.latestWage,\n                        numGroups: crs.numGroups,\n                        numStudents: crs.numStudents,\n                        numTeachers: crs.numTeachers,\n                        sumPayments: crs.sumPayments,\n                        sumHours: crs.sumHours\n                    }\n                })\n                self.setState({\n                    data: courses,\n                    totalRecords: responseObj.data.length,\n                    fetched: true\n                })\n            })\n    }\n\n    render() {\n        console.log(this.state.data);\n\n        const colNames = [\n            {\n                id: 0,\n                title: 'id'\n            },\n            {\n                id: 1,\n                title: 'Title'\n            },\n            {\n                id: 2,\n                title: 'Type'\n            },\n            {\n                id: 3,\n                title: 'Fee'\n            },\n            {\n                id: 4,\n                title: 'Wage'\n            },\n            {\n                id: 5,\n                title: '#Groups'\n            },\n            {\n                id: 6,\n                title: '#Students'\n            },\n            {\n                id: 7,\n                title: '#Teachers'\n            },\n            {\n                id: 8,\n                title: 'Sum payments'\n            },\n            {\n                id: 9,\n                title: '#Hours'\n            }\n        ]\n        return (\n            <section id=\"coursesList\">\n                {this.state.fetched &&\n                <Pagination columns={colNames}\n                            urlRef={\"/course/info/\"}\n                            keyName=\"id\" data={this.state.data}/>\n                }\n            </section>\n        )\n    }\n}\n\nexport default CoursesList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport StudentsList from './students/StudentsList';\nimport TeachersList from './teachers/TeachersList';\nimport GroupsList from './groups/GroupsList';\nimport Analytics from './analytics/Analytics';\nimport DefaultLayout from './DefaultLayout';\n\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport GroupDetails from \"./groups/GroupDetails\";\nimport StudentDetails from \"./students/StudentDetails\";\nimport Timetable from \"./Timetable\";\nimport CoursesList from \"./CoursesList\";\n\nrequire('dotenv').config()\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <DefaultLayout exact path=\"/\" component={() => <Timetable/>} />\n          <DefaultLayout exact path=\"/courses\" component={() => <CoursesList/>} />\n          <DefaultLayout exact path=\"/students\" component={() => <StudentsList/>} />\n          <DefaultLayout exact path=\"/teachers\" component={() => <TeachersList/>} />\n          <DefaultLayout exact path=\"/groups\" component={() => <GroupsList/>} />\n          <DefaultLayout exact path=\"/analytics\" component={() => <Analytics/>} />\n          <DefaultLayout exact path=\"/group/info/:groupId\" component={() => <GroupDetails/>} />\n          <DefaultLayout exact path=\"/student/info/:studentId\" component={() => <StudentDetails/>} />\n\n      </BrowserRouter>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}